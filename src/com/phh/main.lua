---
--- Generated by Luanalysis
--- Created by gientech.
--- DateTime: 2023/3/8 11:46
---

function average(...)
    local s = 0
    local arg = { ... }
    for i, v in ipairs(arg) do
        s = s + v
        print("i==", i)
    end
    print("总共传入 " .. #arg .. " 个数")
    -- #arg 获取可变参数量
    -- return s / #arg
    -- select("#",...) 也可以获取可变参数数量
    return s / select("#", ...)
end

---
function fWrite(fmt, ...)
    return io.write(string.format(fmt, ...))
end

print("平均值为", average(3, 4, 5, 6, 7))
fWrite("abc\n")
fWrite("%d%d\n", 1, 2)

do
    function foo(...)
        for i = 1, select('#', ...) do
            local arg = select(i, ...);
            print("arg", arg)
        end
    end
    foo(1, 2, 3, 4)
end

function arr_test()
    arr = { "lua", "java", "golang" }

    for i = 1, #arr do
        print(arr[i]);
    end
end

arr_test()

--- 自定义迭代函数
print("---自定义迭代函数---")
array = { "java", "golang", "c#", "lua" }

function iterator(collection)
    local index = 0
    local size = #collection
    return function()
        index = index + 1
        if index <= size then
            return collection[index]
        end
    end
end

for item in iterator(array) do
    print(item)
end

---string
print("---string---")
text = [[
 <html>
    <body>
        <div>test</div>
    </body>
 </html>
]]

print(text)

---table
print("---table---")
table = { "TOM", X = 10, "JERRY", Y = 20, "ROSE", Z = 30 }
print(table[1])
print(table.X)
print(table[3])
print(table["Y"])
print(table["Z"])

---function
print("---function---")
-- 多返回值
function func1(a, b)
    return a, b
end
a, b = func1(1, 2)
print(1, 2)

---循环
print("---循环---")
-- 数值型for 第三个参数是步长，可以省略（默认是1）
for i = 1, 10, 1 do
    print(i)
end

--泛型for循环
arr = {"TOME","JERRY","ROWS","LUCY"}
for i,v in ipairs(arr) do
    print(i,v)
end

--泛型for循环2
arr = {"TOME","JERRY","ROWS",x="JACK","LUCY"}
for i,v in pairs(arr) do
    print(i,v)
end